services:
  #api gateway
  api-gateway:
    build: api-gateway
    hostname: api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - barbers-service
      - clients-service
      - reviews-service
      - appointments-service

  barbers-service:
    build: barbers-service  #this looks for the docker file
    hostname: barbers-service
#    ports:
#      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres1:
        condition: service_healthy

  clients-service:
    build: clients-service  #this looks for the docker file
    hostname: clients-service
    container_name: clients-service
#    ports:
#      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql2:
        condition: service_healthy

  reviews-service:
    build: reviews-service  #this looks for the docker file
    hostname: reviews-service
    container_name: reviews-service
#    ports:
#      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql3:
        condition: service_healthy

  appointments-service:
    build: appointments-service  #this looks for the docker file
    hostname: appointments-service
    container_name: appointments-service
#    ports:
#      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
      - barbers-service
      - clients-service
      - reviews-service


  mysql2:
    image: mysql:5.7
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=clients-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql2:/var/lib/mysql2
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql3:
    image: mysql:5.7
    ports:
      - "3309:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=reviews-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    volumes:
      - ./data/mysql3:/var/lib/mysql3
      - ./data/init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-uuser",
          "-ppwd",
          "-h",
          "localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10


  phpmyadmin2:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin2
    links:
      - mysql2
    restart: always
    ports:
      - 5014:80
    environment:
      - PMA_ARBITRARY=1

  phpmyadmin3:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin3
    links:
      - mysql3
    restart: always
    ports:
      - 5015:80
    environment:
      - PMA_ARBITRARY=1


  postgres1:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - PGUSER=user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=barbers-db
    healthcheck:
      test: "pg_isready -h postgres1"
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin1:
    image: dpage/pgadmin4:latest
    container_name: pgadmin1
    restart: always
    ports:
      - 9000:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@bernabe.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres1

  mongodb:
    image: mongo
    container_name: mongo_db
    hostname: mongo_db
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pwd

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    hostname: mongo-express
    restart: always
    ports:
      - 8085:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_URL=mongodb://admin:pass@mongodb:27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pwd

volumes:
  mongo: {}